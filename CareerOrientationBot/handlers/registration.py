from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, callback_query
from aiogram.fsm.state import StatesGroup,State
from aiogram.fsm.context import FSMContext
import app.keyboards as kb
from handlers import get_start
import re
from database.db import Database

router = Router()

#–°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class RegisterState(StatesGroup):
    user_name = State()
    user_phone = State()

#–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è

@router.callback_query(F.data == 'registration')
async def registration_name(callback: CallbackQuery, state: FSMContext): 
    await state.set_state(RegisterState.user_name)
    await callback.answer('')
    msg = await callback.message.edit_text('ü™™–£–∫–∞–∂–∏—Ç–µ –í–∞—à–µ –∏–º—è, —á—Ç–æ–±—ã —è –∑–Ω–∞–ª –∫–∞–∫ –º–Ω–µ –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è:')
    await state.update_data(message_id = msg.message_id)

#–í–≤–æ–¥ –∏–º–µ–Ω–∏
@router.message(RegisterState.user_name)
async def registration_number(message: Message, state: FSMContext):
    message_data = await state.get_data()
    message_id =  message_data.get('message_id')
    print(message_id)
    await state.update_data(user_name=message.text)
    await state.set_state(RegisterState.user_phone)
    await message.bot.delete_message(message.from_user.id,message_id)
    msg = await message.answer('üìû–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7**********:') 
    await state.update_data(message_id = msg.message_id)

#–í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@router.message(RegisterState.user_phone)
async def registration_complete(message: Message, state: FSMContext):    
    message_data = await state.get_data()
    message_id =  message_data.get('message_id')
    await message.bot.delete_message(message.from_user.id,message_id)
    if(re.findall('^\+?[7][-\(]?\d{3}\)?\d{3}-?\d{2}-?\d{2}$', message.text)):
        await state.update_data(user_phone=message.text)
        regdata = await state.get_data() 
        reg_name = regdata.get('user_name')
        reg_phone = regdata.get('user_phone')        
        db = Database()
        await db.insert_user(reg_name, reg_phone, message.from_user.id)
        await get_start.start(message)
        await state.clear()
    else:        
        msg = await message.answer('‚ùå–ù–æ–º–µ—Ä —É–∫–∞–∑–∞–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (+7**********)')
        await state.update_data(message_id = msg.message_id)
        
